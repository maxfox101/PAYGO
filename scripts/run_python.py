#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ PayGo API –±–µ–∑ Docker
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –¥–≤–æ–π–Ω—ã–º –∫–ª–∏–∫–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
"""

import os
import sys
import subprocess
import time

def main():
    print("=" * 60)
    print("üöÄ PayGo - –ó–ê–ü–£–°–ö –ü–†–û–°–¢–û–ô –í–ï–†–°–ò–ò")
    print("=" * 60)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    current_dir = os.getcwd()
    if not current_dir.endswith('PayGo'):
        print("‚ùå –û—à–∏–±–∫–∞: –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ PayGo!")
        print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É backend
    backend_dir = os.path.join(current_dir, "PROJECT", "web-service", "backend")
    if not os.path.exists(backend_dir):
        print("‚ùå –û—à–∏–±–∫–∞: –ø–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print(f"–û–∂–∏–¥–∞–µ–º–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {backend_dir}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print("[1] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É backend...")
    os.chdir(backend_dir)
    print("‚úì –ü–µ—Ä–µ—à–ª–∏ –≤ –ø–∞–ø–∫—É backend")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    print("[2] –ü—Ä–æ–≤–µ—Ä—è–µ–º Python...")
    try:
        result = subprocess.run([sys.executable, "--version"], 
                              capture_output=True, text=True, check=True)
        print(f"‚úì Python –¥–æ—Å—Ç—É–ø–µ–Ω: {result.stdout.strip()}")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞: Python –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!")
        print(f"–û—à–∏–±–∫–∞: {e}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("[3] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    print("–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã...")
    
    packages = ["fastapi", "uvicorn[standard]", "pydantic"]
    for package in packages:
        try:
            print(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {package}...")
            subprocess.run([sys.executable, "-m", "pip", "install", package], 
                         check=True, capture_output=True)
            print(f"‚úì {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except subprocess.CalledProcessError:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {package}, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ simple_main.py
    if not os.path.exists("simple_main.py"):
        print("‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª simple_main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print("[4] –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä...")
    print()
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º PayGo API...")
    print("üìç –ê–¥—Ä–µ—Å: http://localhost:8000")
    print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/api/docs")
    print("üíì –ó–¥–æ—Ä–æ–≤—å–µ: http://localhost:8000/api/health")
    print()
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞")
    print("-" * 60)
    
    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —á—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    time.sleep(2)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    try:
        subprocess.run([sys.executable, "simple_main.py"], check=True)
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()



